{"version":3,"file":"static/js/416.f2d34245.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                child.animationState &&\n                    child.animationState.setActive(type, isActive);\n            });\n        }\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","i","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","AnimationType","addPointerEvent","addPointerInfo","combineFunctions","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","Hover","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","Focus","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","Tap","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","requestAnimationFrame","onViewportEnter","InView","viewport","rootMargin","amount","once","fallback","threshold","isIntersecting","onViewportLeave","viewportFallback","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isTransformDirty","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","BoundingBoxDimension","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}